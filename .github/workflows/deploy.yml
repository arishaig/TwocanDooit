name: Deploy to Play Store

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
    
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.6'
        cache: true
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Create Firebase options stub for CI
      run: |
        if [ ! -f "lib/firebase_options.dart" ]; then
          cp lib/firebase_options_stub.dart lib/firebase_options.dart
        fi
    
    - name: Run tests
      run: flutter test
    
    - name: Create keystore file
      run: |
        echo "Base64 string length: ${#KEYSTORE_BASE64}"
        echo "First 50 chars: ${KEYSTORE_BASE64:0:50}"
        echo "Creating keystore file..."
        echo "$KEYSTORE_BASE64" | base64 -d > android/app/upload-key-new.jks
        if [ ! -f android/app/upload-key-new.jks ]; then
          echo "ERROR: Failed to create keystore file"
          exit 1
        fi
        ls -la android/app/upload-key-new.jks
        echo "Keystore file created successfully"
      env:
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
    
    - name: Create google-services.json
      run: |
        echo "$GOOGLE_SERVICES_JSON" > android/app/google-services.json
        echo "Google Services JSON created successfully"
      env:
        GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
    
    - name: Create key.properties file
      run: |
        echo "storePassword=${KEYSTORE_PASSWORD:-TwocanDooit2025!}" > android/key.properties
        echo "keyPassword=${KEY_PASSWORD:-TwocanDooit2025!}" >> android/key.properties
        echo "keyAlias=${KEY_ALIAS:-upload-key-new}" >> android/key.properties
        echo "storeFile=${STORE_FILE:-upload-key-new.jks}" >> android/key.properties
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        STORE_FILE: ${{ secrets.STORE_FILE }}
    
    - name: Verify key.properties and keystore
      run: |
        echo "Contents of key.properties:"
        cat android/key.properties
        echo "Keystore file exists:"
        ls -la android/app/upload-key-new.jks
        echo "Build will look for keystore at:"
        ls -la android/app/$(grep "storeFile=" android/key.properties | cut -d'=' -f2)
    
    - name: Build App Bundle
      run: flutter build appbundle --release
    
    - name: Upload to Play Store
      uses: r0adkll/upload-google-play@v1.1.3
      with:
        serviceAccountJsonPlainText: ${{ secrets.SERVICE_ACCOUNT_JSON }}
        packageName: com.arishaig.twocandooit
        releaseFiles: build/app/outputs/bundle/release/app-release.aab
        track: internal
        status: completed
    
    - name: Increment build number
      run: |
        # Get current version from pubspec.yaml
        current_version=$(grep "version:" pubspec.yaml | sed 's/version: //')
        version_name=$(echo $current_version | cut -d'+' -f1)
        build_number=$(echo $current_version | cut -d'+' -f2)
        new_build_number=$((build_number + 1))
        new_version="${version_name}+${new_build_number}"
        
        # Update pubspec.yaml
        sed -i "s/version: $current_version/version: $new_version/" pubspec.yaml
        
        echo "Updated version from $current_version to $new_version"
    
    - name: Commit and push build number increment
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add pubspec.yaml
        git commit -m "Increment build number after successful deployment ðŸš€" || exit 0
        git push